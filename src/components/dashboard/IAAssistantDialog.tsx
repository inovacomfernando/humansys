
import React, { useState, useEffect, useRef } from 'react';
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from '@/components/ui/dialog';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { ScrollArea } from '@/components/ui/scroll-area';
import { Badge } from '@/components/ui/badge';
import { Card, CardContent } from '@/components/ui/card';
import { 
  Bot, 
  Send, 
  Sparkles, 
  User, 
  Brain,
  Target,
  BookOpen,
  Users,
  TrendingUp,
  Lightbulb,
  MessageSquare,
  Loader2,
  Star,
  Zap
} from 'lucide-react';
import { useAuth } from '@/contexts/AuthContext';
import { supabase } from '@/integrations/supabase/client';

interface Message {
  id: string;
  type: 'user' | 'assistant';
  content: string;
  timestamp: Date;
  suggestions?: string[];
  insights?: {
    type: 'development' | 'training' | 'integration' | 'performance';
    title: string;
    description: string;
    action?: string;
  }[];
}

interface UserProfile {
  name: string;
  position: string;
  department: string;
  seniority_level: string;
  skills: string[];
  goals: any[];
  trainings: any[];
  performance_score?: number;
  disc_profile?: string;
}

interface IAAssistantDialogProps {
  open: boolean;
  onOpenChange: (open: boolean) => void;
}

export const IAAssistantDialog: React.FC<IAAssistantDialogProps> = ({ 
  open, 
  onOpenChange 
}) => {
  const [messages, setMessages] = useState<Message[]>([]);
  const [inputValue, setInputValue] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [userProfile, setUserProfile] = useState<UserProfile | null>(null);
  const { user } = useAuth();
  const messagesEndRef = useRef<HTMLDivElement>(null);

  // Carregar perfil do usu√°rio
  useEffect(() => {
    if (open && user?.id) {
      loadUserProfile();
      initializeConversation();
    }
  }, [open, user?.id]);

  // Auto scroll para o final das mensagens
  useEffect(() => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  }, [messages]);

  const loadUserProfile = async () => {
    try {
      // Buscar dados do colaborador
      const { data: collaborator } = await supabase
        .from('collaborators')
        .select('*')
        .eq('user_id', user?.id)
        .single();

      // Buscar metas
      const { data: goals } = await supabase
        .from('goals')
        .select('*')
        .eq('collaborator_id', collaborator?.id)
        .eq('status', 'active');

      // Buscar treinamentos
      const { data: trainings } = await supabase
        .from('training_enrollments')
        .select(`
          *,
          trainings:training_id(*)
        `)
        .eq('collaborator_id', collaborator?.id);

      // Buscar perfil DISC
      const { data: discProfile } = await supabase
        .from('disc_assessments')
        .select('result_summary')
        .eq('collaborator_id', collaborator?.id)
        .order('created_at', { ascending: false })
        .limit(1)
        .single();

      setUserProfile({
        name: collaborator?.name || user?.email?.split('@')[0] || 'Usu√°rio',
        position: collaborator?.position || 'N√£o informado',
        department: collaborator?.department || 'N√£o informado',
        seniority_level: collaborator?.seniority_level || 'junior',
        skills: collaborator?.skills || [],
        goals: goals || [],
        trainings: trainings || [],
        performance_score: collaborator?.performance_score || 75,
        disc_profile: discProfile?.result_summary
      });
    } catch (error) {
      console.error('Error loading user profile:', error);
    }
  };

  const initializeConversation = () => {
    const welcomeMessage: Message = {
      id: Date.now().toString(),
      type: 'assistant',
      content: `üëã Ol√°! Sou seu IA Assistant especializado em RH e Desenvolvimento de Pessoas do HumanSys. 

üéØ **Minhas Especialidades:**
‚Ä¢ Recrutamento e Sele√ß√£o Estrat√©gica
‚Ä¢ Sa√∫de Mental no Trabalho
‚Ä¢ Reten√ß√£o de Talentos
‚Ä¢ Desenvolvimento de Pessoas & PDI
‚Ä¢ People Analytics & Predi√ß√£o de Churn

Estou aqui para te ajudar com insights personalizados baseados no seu perfil e nas melhores pr√°ticas de gest√£o de pessoas!`,
      timestamp: new Date(),
      suggestions: [
        'Como melhorar minha performance?',
        'Estrat√©gias de reten√ß√£o de talentos',
        'Desenvolver meu plano de carreira',
        'Sa√∫de mental no trabalho',
        'Recrutamento e sele√ß√£o eficaz',
        'An√°lise do meu perfil DISC'
      ]
    };

    setMessages([welcomeMessage]);
  };

  const generatePersonalizedResponse = (userMessage: string): Message => {
    const message = userMessage.toLowerCase();
    let response = '';
    let insights: any[] = [];
    let suggestions: string[] = [];

    // EXPERTISE EM RECRUTAMENTO E SELE√á√ÉO
    if (message.includes('recrutamento') || message.includes('sele√ß√£o') || message.includes('contratar') || message.includes('vaga') || message.includes('candidato')) {
      response = `üë• **RECRUTAMENTO E SELE√á√ÉO ESTRAT√âGICO**\n\n`;
      response += `Como especialista em atra√ß√£o de talentos, vou te ajudar com o processo completo:\n\n`;
      
      if (message.includes('time to hire') || message.includes('tempo')) {
        response += `‚è±Ô∏è **Time to Hire Otimizado:**\n`;
        response += `‚Ä¢ Meta ideal: 15-30 dias para posi√ß√µes t√©cnicas\n`;
        response += `‚Ä¢ Use ATS para automatizar triagem inicial\n`;
        response += `‚Ä¢ Estruture pipeline com 4-5 etapas m√°ximo\n`;
        response += `‚Ä¢ Feedback em at√© 5 dias √∫teis (obrigat√≥rio)\n\n`;
      } else if (message.includes('entrevista')) {
        response += `üéØ **Entrevista por Compet√™ncias:**\n`;
        response += `‚Ä¢ Construa scorecard espec√≠fico por compet√™ncia\n`;
        response += `‚Ä¢ Use m√©todo STAR (Situa√ß√£o, Tarefa, A√ß√£o, Resultado)\n`;
        response += `‚Ä¢ Avalie fit cultural al√©m de skills t√©cnicas\n`;
        response += `‚Ä¢ Panel de entrevistas para reduzir vi√©s\n\n`;
      } else {
        response += `üìã **Processo Estruturado:**\n`;
        response += `1. **Atra√ß√£o:** Persona de candidato ideal definida\n`;
        response += `2. **Triagem:** ATS + scorecard por compet√™ncia\n`;
        response += `3. **Entrevista:** T√©cnica + comportamental + fit cultural\n`;
        response += `4. **Testes:** Aptid√£o + perfil DISC integrado\n`;
        response += `5. **Feedback:** M√°ximo 5 dias √∫teis\n`;
        response += `6. **Admiss√£o:** Onboarding estruturado\n\n`;
      }

      insights.push({
        type: 'training',
        title: 'KPIs de Recrutamento',
        description: 'Time to hire, Quality of hire, Candidate NPS, Taxa de convers√£o',
        action: 'Ver m√©tricas do pipeline'
      });

      suggestions = [
        'Como reduzir time to hire?',
        'Estruturar entrevista por compet√™ncias',
        'Melhorar candidate experience',
        'Aumentar diversidade no pipeline',
        'Como medir quality of hire?'
      ];
    }
    
    // EXPERTISE EM SA√öDE MENTAL NO TRABALHO
    else if (message.includes('sa√∫de mental') || message.includes('burnout') || message.includes('estresse') || message.includes('ansiedade') || message.includes('psicol√≥gico') || message.includes('bem-estar')) {
      response = `üß† **SA√öDE MENTAL NO TRABALHO**\n\n`;
      response += `Como especialista em bem-estar organizacional, reconhe√ßo a import√¢ncia cr√≠tica da sa√∫de emocional:\n\n`;
      
      if (message.includes('burnout')) {
        response += `üî• **Preven√ß√£o e Gest√£o do Burnout:**\n`;
        response += `‚Ä¢ Identifique sinais precoces: fadiga cr√¥nica, cinismo, baixa efic√°cia\n`;
        response += `‚Ä¢ Implemente pausas obrigat√≥rias e limites de carga hor√°ria\n`;
        response += `‚Ä¢ Ofere√ßa flexibilidade e autonomia no trabalho\n`;
        response += `‚Ä¢ Fortale√ßa rede de apoio e comunica√ß√£o aberta\n\n`;
      } else if (message.includes('programa') || message.includes('eap')) {
        response += `üìû **Programa de Apoio ao Empregado (EAP):**\n`;
        response += `‚Ä¢ Escuta psicol√≥gica confidencial 24/7\n`;
        response += `‚Ä¢ Orienta√ß√£o financeira e jur√≠dica\n`;
        response += `‚Ä¢ Apoio em crises familiares ou pessoais\n`;
        response += `‚Ä¢ Workshops preventivos sobre resili√™ncia\n\n`;
      } else {
        response += `üåü **Iniciativas Integradas:**\n`;
        response += `‚Ä¢ **Preventivas:** Medita√ß√£o, workshops de gest√£o emocional\n`;
        response += `‚Ä¢ **Interventivas:** EAP, escuta psicol√≥gica, apoio em crises\n`;
        response += `‚Ä¢ **Culturais:** Lideran√ßas treinadas em acolhimento emp√°tico\n`;
        response += `‚Ä¢ **Ambientais:** Espa√ßos de descompress√£o, hor√°rios flex√≠veis\n\n`;
      }

      insights.push({
        type: 'performance',
        title: 'Indicadores de Bem-estar',
        description: 'Absente√≠smo emocional, uso de terapia, reten√ß√£o em equipes cr√≠ticas',
        action: 'Monitorar sa√∫de mental da equipe'
      });

      suggestions = [
        'Como identificar burnout na equipe?',
        'Implementar programa de bem-estar',
        'Treinar lideran√ßa para acolhimento',
        'M√©tricas de sa√∫de mental organizacional',
        'Como promover equil√≠brio vida-trabalho?'
      ];
    }
    
    // EXPERTISE EM RETEN√á√ÉO DE TALENTOS
    else if (message.includes('reten√ß√£o') || message.includes('turnover') || message.includes('rotatividade') || message.includes('sair da empresa') || message.includes('demiss√£o')) {
      response = `üéØ **RETEN√á√ÉO ESTRAT√âGICA DE TALENTOS**\n\n`;
      response += `Como especialista em people analytics, vou te ajudar a construir uma estrat√©gia de reten√ß√£o data-driven:\n\n`;
      
      if (message.includes('turnover') || message.includes('rotatividade')) {
        response += `üìä **An√°lise de Turnover:**\n`;
        response += `‚Ä¢ **Turnover Geral:** Meta < 15% ao ano\n`;
        response += `‚Ä¢ **Turnover Volunt√°rio:** Foco principal de a√ß√£o\n`;
        response += `‚Ä¢ **Por Senioridade:** Juniores (maior), Seniors (cr√≠tico)\n`;
        response += `‚Ä¢ **Por Departamento:** Identifique hotspots\n\n`;
        response += `üîç **Fatores de Risco:**\n`;
        response += `‚Ä¢ Falta de crescimento (35% das sa√≠das)\n`;
        response += `‚Ä¢ Relacionamento com gestor (25%)\n`;
        response += `‚Ä¢ Compensa√ß√£o inadequada (20%)\n`;
        response += `‚Ä¢ Cultura/ambiente t√≥xico (20%)\n\n`;
      } else {
        response += `üöÄ **Estrat√©gias de Reten√ß√£o:**\n`;
        response += `‚Ä¢ **Career Pathing:** PDI estruturado + mentoria\n`;
        response += `‚Ä¢ **Reconhecimento:** Feedback cont√≠nuo + recompensas\n`;
        response += `‚Ä¢ **Desenvolvimento:** Trilhas de aprendizado personalizadas\n`;
        response += `‚Ä¢ **Engajamento:** Projetos desafiadores + autonomia\n`;
        response += `‚Ä¢ **Cultura:** Valores vividos + comunica√ß√£o transparente\n\n`;
      }

      insights.push({
        type: 'development',
        title: 'Predi√ß√£o de Churn',
        description: 'Use IA para identificar colaboradores em risco de sa√≠da',
        action: 'Ver an√°lise preditiva'
      });

      suggestions = [
        'Como reduzir turnover volunt√°rio?',
        'Identificar colaboradores em risco',
        'Estruturar programa de reten√ß√£o',
        'KPIs de engajamento e satisfa√ß√£o',
        'Exit interview estruturada'
      ];
    }
    
    // EXPERTISE EM DESENVOLVIMENTO DE PESSOAS
    else if (message.includes('desenvolvimento') || message.includes('pdi') || message.includes('carreira') || message.includes('crescimento') || message.includes('promo√ß√£o')) {
      response = `üå± **DESENVOLVIMENTO ESTRAT√âGICO DE PESSOAS**\n\n`;
      response += `Como especialista em people development, vou estruturar um plano completo para ${userProfile?.name || 'voc√™'}:\n\n`;
      
      if (userProfile?.position && userProfile?.seniority_level) {
        response += `üìç **Seu Perfil Atual:**\n`;
        response += `‚Ä¢ Posi√ß√£o: ${userProfile.position}\n`;
        response += `‚Ä¢ Senioridade: ${userProfile.seniority_level}\n`;
        response += `‚Ä¢ Departamento: ${userProfile.department}\n\n`;
      }

      response += `üéØ **PDI Estruturado:**\n`;
      response += `‚Ä¢ **Assessment 360¬∞:** Compet√™ncias t√©cnicas + comportamentais\n`;
      response += `‚Ä¢ **Gap Analysis:** Onde est√° vs. onde quer chegar\n`;
      response += `‚Ä¢ **Trilha de Desenvolvimento:** 70% experi√™ncia + 20% mentoria + 10% treinamento\n`;
      response += `‚Ä¢ **Milestones:** Metas SMART com revis√µes trimestrais\n\n`;

      if (userProfile?.seniority_level === 'junior') {
        response += `üåü **Foco para J√∫nior:**\n`;
        response += `‚Ä¢ Fundamentos t√©cnicos s√≥lidos\n`;
        response += `‚Ä¢ Soft skills: comunica√ß√£o e trabalho em equipe\n`;
        response += `‚Ä¢ Mentor√≠a com profissional senior\n`;
        response += `‚Ä¢ Projetos de complexidade crescente\n\n`;
      } else if (userProfile?.seniority_level === 'pleno') {
        response += `‚≠ê **Foco para Pleno:**\n`;
        response += `‚Ä¢ Lideran√ßa t√©cnica e de pequenos projetos\n`;
        response += `‚Ä¢ Habilidades de negocia√ß√£o e influ√™ncia\n`;
        response += `‚Ä¢ Mentoria reversa (ensinar juniores)\n`;
        response += `‚Ä¢ Especializa√ß√£o t√©cnica ou gest√£o\n\n`;
      } else {
        response += `üèÜ **Foco para Senior:**\n`;
        response += `‚Ä¢ Lideran√ßa estrat√©gica e vis√£o de neg√≥cio\n`;
        response += `‚Ä¢ Desenvolvimento de outros l√≠deres\n`;
        response += `‚Ä¢ Inova√ß√£o e transforma√ß√£o organizacional\n`;
        response += `‚Ä¢ Network externo e representa√ß√£o da empresa\n\n`;
      }

      insights.push({
        type: 'development',
        title: 'Acelera√ß√£o de Carreira',
        description: 'Plano personalizado baseado em seu perfil e objetivos',
        action: 'Criar PDI detalhado'
      });

      suggestions = [
        'Como acelerar minha promo√ß√£o?',
        'Compet√™ncias mais valorizadas',
        'Programa de mentoria interna',
        'Mobilidade horizontal vs vertical',
        'Como ser reconhecido pela lideran√ßa?'
      ];
    }

    // An√°lise de contexto baseada no perfil original
    else if (message.includes('performance') || message.includes('desempenho')) {
      response = `üìä Baseado no seu perfil, vejo que voc√™ est√° em ${userProfile?.position} no departamento de ${userProfile?.department}. `;
      
      if (userProfile?.performance_score && userProfile.performance_score < 80) {
        response += `Sua performance atual est√° em ${userProfile.performance_score}%. Recomendo focar em desenvolvimento de compet√™ncias t√©cnicas.`;
        insights.push({
          type: 'performance',
          title: 'Oportunidade de Melhoria',
          description: 'Identifiquei √°reas onde voc√™ pode elevar sua performance',
          action: 'Ver plano de desenvolvimento'
        });
      } else {
        response += `Excelente! Sua performance est√° acima da m√©dia (${userProfile?.performance_score}%). Continue assim!`;
      }

      suggestions = [
        'Como definir metas SMART?',
        'Feedback dos meus superiores',
        'Comparar com benchmarks da empresa'
      ];
    }
    
    else if (message.includes('treinamento') || message.includes('capacita√ß√£o')) {
      response = `üéì Baseado no seu perfil de ${userProfile?.seniority_level} em ${userProfile?.position}, recomendo os seguintes treinamentos:\n\n`;
      
      if (userProfile?.seniority_level === 'junior') {
        response += `‚Ä¢ Fundamentos de lideran√ßa\n‚Ä¢ Comunica√ß√£o eficaz\n‚Ä¢ Gest√£o de tempo\n‚Ä¢ T√©cnicas de apresenta√ß√£o`;
      } else if (userProfile?.seniority_level === 'pleno') {
        response += `‚Ä¢ Lideran√ßa avan√ßada\n‚Ä¢ Gest√£o de projetos\n‚Ä¢ Negocia√ß√£o\n‚Ä¢ Coaching e mentoria`;
      } else {
        response += `‚Ä¢ Lideran√ßa estrat√©gica\n‚Ä¢ Inova√ß√£o e transforma√ß√£o digital\n‚Ä¢ Gest√£o de mudan√ßas\n‚Ä¢ Desenvolvimento de talentos`;
      }

      insights.push({
        type: 'training',
        title: 'Trilha de Aprendizado Personalizada',
        description: 'Cursos selecionados especificamente para seu perfil e objetivos',
        action: 'Ver treinamentos recomendados'
      });

      suggestions = [
        'Cronograma de estudos personalizado',
        'Certifica√ß√µes importantes para minha √°rea',
        'Como aplicar o aprendizado no trabalho'
      ];
    }
    
    else if (message.includes('carreira') || message.includes('pdi') || message.includes('desenvolvimento')) {
      response = `üöÄ Seu Plano de Desenvolvimento Individual deve focar em:\n\n`;
      
      if (userProfile?.goals && userProfile.goals.length > 0) {
        response += `‚úÖ Vi que voc√™ tem ${userProfile.goals.length} meta(s) ativa(s). √ìtimo!\n\n`;
      }

      response += `**Pr√≥ximos Passos Recomendados:**\n`;
      response += `‚Ä¢ Desenvolver compet√™ncias de ${userProfile?.department}\n`;
      response += `‚Ä¢ Ampliar network interno\n`;
      response += `‚Ä¢ Buscar projetos de maior visibilidade\n`;
      response += `‚Ä¢ Construir conhecimento em inova√ß√£o`;

      insights.push({
        type: 'development',
        title: 'Roadmap de Carreira',
        description: 'Caminho estruturado para sua evolu√ß√£o profissional',
        action: 'Criar PDI detalhado'
      });

      suggestions = [
        'Como acelerar minha promo√ß√£o?',
        'Compet√™ncias mais valorizadas na empresa',
        'Oportunidades de mobilidade interna'
      ];
    }
    
    else if (message.includes('disc') || message.includes('perfil') || message.includes('comportamental')) {
      if (userProfile?.disc_profile) {
        response = `üß† Seu perfil DISC mostra caracter√≠sticas interessantes!\n\n`;
        response += `Baseado na an√°lise: ${userProfile.disc_profile}\n\n`;
        response += `**Recomenda√ß√µes personalizadas:**\n`;
        response += `‚Ä¢ Aproveite seus pontos fortes naturais\n`;
        response += `‚Ä¢ Desenvolva √°reas de melhoria identificadas\n`;
        response += `‚Ä¢ Adapte seu estilo de comunica√ß√£o conforme a situa√ß√£o`;
      } else {
        response = `üß† Ainda n√£o temos seu perfil DISC completo. Recomendo fazer a avalia√ß√£o para insights mais precisos!`;
        
        insights.push({
          type: 'development',
          title: 'An√°lise DISC Pendente',
          description: 'Complete sua avalia√ß√£o para receber insights comportamentais',
          action: 'Fazer an√°lise DISC'
        });
      }

      suggestions = [
        'Como usar meu perfil DISC no trabalho?',
        'Compatibilidade com minha equipe',
        'Adaptar estilo de lideran√ßa'
      ];
    }
    
    else if (message.includes('equipe') || message.includes('time') || message.includes('integra√ß√£o')) {
      response = `üë• Para melhor integra√ß√£o com sua equipe em ${userProfile?.department}:\n\n`;
      response += `‚Ä¢ Participe ativamente das reuni√µes de equipe\n`;
      response += `‚Ä¢ Compartilhe conhecimentos e aprenda com colegas\n`;
      response += `‚Ä¢ Proponha iniciativas colaborativas\n`;
      response += `‚Ä¢ Busque feedback regular do seu gestor`;

      insights.push({
        type: 'integration',
        title: 'Estrat√©gias de Integra√ß√£o',
        description: 'Formas eficazes de se conectar melhor com sua equipe',
        action: 'Ver dicas de relacionamento'
      });

      suggestions = [
        'Como dar feedback construtivo?',
        'Resolver conflitos na equipe',
        'Fortalecer relacionamentos profissionais'
      ];
    }
    
    else {
      response = `ü§î Entendi! Baseado no seu perfil, posso ajudar voc√™ com v√°rias √°reas do seu desenvolvimento profissional. Em que gostaria de focar hoje?`;
      
      suggestions = [
        'An√°lise da minha performance atual',
        'Plano de carreira personalizado',
        'Treinamentos recomendados',
        'Insights do meu perfil DISC',
        'Dicas de integra√ß√£o com a equipe'
      ];
    }

    return {
      id: Date.now().toString(),
      type: 'assistant',
      content: response,
      timestamp: new Date(),
      suggestions,
      insights
    };
  };

  const handleSendMessage = async () => {
    if (!inputValue.trim() || isLoading) return;

    const userMessage: Message = {
      id: Date.now().toString(),
      type: 'user',
      content: inputValue,
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    setInputValue('');
    setIsLoading(true);

    // Simular processamento da IA
    setTimeout(() => {
      const assistantResponse = generatePersonalizedResponse(inputValue);
      setMessages(prev => [...prev, assistantResponse]);
      setIsLoading(false);
    }, 1500);
  };

  const handleSuggestionClick = (suggestion: string) => {
    setInputValue(suggestion);
  };

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      handleSendMessage();
    }
  };

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="max-w-4xl h-[80vh] flex flex-col">
        <DialogHeader className="border-b pb-4">
          <DialogTitle className="flex items-center gap-3">
            <div className="w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center">
              <Bot className="h-5 w-5 text-white" />
            </div>
            <div>
              <div className="flex items-center gap-2">
                <span>IA Assistant</span>
                <Badge className="bg-green-100 text-green-800 border-green-200">
                  Online
                </Badge>
              </div>
              <DialogDescription className="text-left">
                Assistente inteligente personalizado para seu desenvolvimento
              </DialogDescription>
            </div>
          </DialogTitle>
        </DialogHeader>

        {/* Chat Messages */}
        <ScrollArea className="flex-1 p-4">
          <div className="space-y-4">
            {messages.map((message) => (
              <div
                key={message.id}
                className={`flex gap-3 ${
                  message.type === 'user' ? 'justify-end' : 'justify-start'
                }`}
              >
                {message.type === 'assistant' && (
                  <div className="w-8 h-8 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center flex-shrink-0">
                    <Bot className="h-4 w-4 text-white" />
                  </div>
                )}
                
                <div className={`max-w-[80%] ${message.type === 'user' ? 'order-1' : ''}`}>
                  <Card className={`${
                    message.type === 'user' 
                      ? 'bg-blue-500 text-white' 
                      : 'bg-gray-50 border-gray-200'
                  }`}>
                    <CardContent className="p-3">
                      <div className="whitespace-pre-wrap text-sm">
                        {message.content}
                      </div>
                      
                      {/* Insights */}
                      {message.insights && message.insights.length > 0 && (
                        <div className="mt-3 space-y-2">
                          {message.insights.map((insight, index) => (
                            <div key={index} className="bg-white/10 backdrop-blur-sm p-3 rounded-lg border border-white/20">
                              <div className="flex items-center gap-2 mb-1">
                                <Lightbulb className="h-4 w-4 text-yellow-500" />
                                <span className="font-medium text-sm">{insight.title}</span>
                              </div>
                              <p className="text-xs opacity-90 mb-2">{insight.description}</p>
                              {insight.action && (
                                <Button size="sm" variant="outline" className="text-xs h-7">
                                  {insight.action}
                                </Button>
                              )}
                            </div>
                          ))}
                        </div>
                      )}

                      {/* Suggestions */}
                      {message.suggestions && message.suggestions.length > 0 && (
                        <div className="mt-3 flex flex-wrap gap-2">
                          {message.suggestions.map((suggestion, index) => (
                            <Button
                              key={index}
                              variant="outline"
                              size="sm"
                              className="text-xs h-7 bg-white/10 border-white/20 hover:bg-white/20"
                              onClick={() => handleSuggestionClick(suggestion)}
                            >
                              {suggestion}
                            </Button>
                          ))}
                        </div>
                      )}
                    </CardContent>
                  </Card>
                  
                  <div className={`text-xs text-muted-foreground mt-1 ${
                    message.type === 'user' ? 'text-right' : 'text-left'
                  }`}>
                    {message.timestamp.toLocaleTimeString()}
                  </div>
                </div>

                {message.type === 'user' && (
                  <div className="w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center flex-shrink-0">
                    <User className="h-4 w-4 text-white" />
                  </div>
                )}
              </div>
            ))}
            
            {/* Loading indicator */}
            {isLoading && (
              <div className="flex gap-3">
                <div className="w-8 h-8 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center">
                  <Bot className="h-4 w-4 text-white" />
                </div>
                <Card className="bg-gray-50">
                  <CardContent className="p-3">
                    <div className="flex items-center gap-2">
                      <Loader2 className="h-4 w-4 animate-spin" />
                      <span className="text-sm text-muted-foreground">
                        Analisando seu perfil e gerando resposta...
                      </span>
                    </div>
                  </CardContent>
                </Card>
              </div>
            )}
            
            <div ref={messagesEndRef} />
          </div>
        </ScrollArea>

        {/* Input Area */}
        <div className="border-t pt-4">
          <div className="flex gap-2">
            <Input
              placeholder="Digite sua pergunta sobre desenvolvimento, treinamentos, carreira..."
              value={inputValue}
              onChange={(e) => setInputValue(e.target.value)}
              onKeyPress={handleKeyPress}
              className="flex-1"
              disabled={isLoading}
            />
            <Button 
              onClick={handleSendMessage} 
              disabled={!inputValue.trim() || isLoading}
              className="bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700"
            >
              <Send className="h-4 w-4" />
            </Button>
          </div>
          
          {/* Quick Actions */}
          <div className="mt-3 flex flex-wrap gap-2">
            <Button
              variant="outline"
              size="sm"
              onClick={() => handleSuggestionClick('Como est√° minha performance?')}
              className="text-xs"
            >
              <TrendingUp className="h-3 w-3 mr-1" />
              Performance
            </Button>
            <Button
              variant="outline"
              size="sm"
              onClick={() => handleSuggestionClick('Estrat√©gias de reten√ß√£o de talentos')}
              className="text-xs"
            >
              <Users className="h-3 w-3 mr-1" />
              Reten√ß√£o
            </Button>
            <Button
              variant="outline"
              size="sm"
              onClick={() => handleSuggestionClick('Como desenvolver minha carreira?')}
              className="text-xs"
            >
              <Target className="h-3 w-3 mr-1" />
              Carreira
            </Button>
            <Button
              variant="outline"
              size="sm"
              onClick={() => handleSuggestionClick('Sa√∫de mental no trabalho')}
              className="text-xs"
            >
              <Brain className="h-3 w-3 mr-1" />
              Bem-estar
            </Button>
            <Button
              variant="outline"
              size="sm"
              onClick={() => handleSuggestionClick('Recrutamento e sele√ß√£o eficaz')}
              className="text-xs"
            >
              <MessageSquare className="h-3 w-3 mr-1" />
              Recrutamento
            </Button>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );
};
